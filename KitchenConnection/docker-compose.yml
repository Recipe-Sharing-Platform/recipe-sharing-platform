# https://localhost:53967 KitchenConnection API
# https://localhost:9300 KitchenConnection Elastic API
# http://localhost:8000 pgAdmin
# http://localhost:8081 Redis Commander
# http://localhost:5601 Kibana
# http://localhost:15672 RabbitMQ Management


version: '3.4'
x-kitchen-connection: &kitchen-connection KitchenConnection
services:
  kitchenconnection:
    image: ${DOCKER_REGISTRY-}kitchenconnection
    build:
      context: .
      dockerfile: KitchenConnection/Dockerfile
    networks:
      - kitchen-connection
    ports:
      - "44304:80"
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    environment:
      - ConnectionStrings__DefaultConnection=Server=postgres;Port=5432;Database=KitchenConnection;User Id=KitchenConnection;Password=KitchenConnection
      - RabbitMqConfig__HostName=host.docker.internal
      - RabbitMqConfig__UserName=kitchenconnection
      - RabbitMqConfig__Password=kitchenconnection
      - ConnectionStrings__redis=redis:6379
  kitchenconnection.elastic:
    image: ${DOCKER_REGISTRY-}kitchenconnectionelastic
    build:
      context: .
      dockerfile: KitchenConnection.Elastic/Dockerfile
    networks: 
      - kitchen-connection
    ports:
      - "9300:80"
    depends_on:
      rabbitmq:
        condition: service_healthy
      elasticsearch: 
        condition: service_started
    environment:
      - ConnectionStrings__elasticSearch=http://elasticsearch:9200
      - RabbitMqConfig__HostName=host.docker.internal
      - RabbitMqConfig__UserName=kitchenconnection
      - RabbitMqConfig__Password=kitchenconnection
  kitchenconnection.notifier:
    image: ${DOCKER_REGISTRY-}kitchenconnectionnotifier
    build:
      context: .
      dockerfile: KitchenConnection.Notifier/Dockerfile
    networks:
      - kitchen-connection
    ports:
      - "35000:80"
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RabbitMqConfig__HostName=host.docker.internal
      - RabbitMqConfig__UserName=kitchenconnection
      - RabbitMqConfig__Password=kitchenconnection  
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: KitchenConnection
      POSTGRES_PASSWORD: KitchenConnection
    ports:
      - 5432:5432
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - kitchen-connection
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: kitchenconnection@recipe-sharing.com
      PGADMIN_DEFAULT_PASSWORD: kitchenconnection
    ports:
      - 8000:80
    depends_on:
      - postgres
    volumes:
      - pgadmin:/var/lib/pgadmin
    networks:
      - kitchen-connection
  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - 6379:6379
    volumes:
      - redis:/data
    networks:
      - kitchen-connection
  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
    - REDIS_HOSTS=redis
    ports:
    - 8081:8081
    networks:
      - kitchen-connection
    depends_on:
      - redis
  rabbitmq:
    image: rabbitmq:3-management
    hostname: rabbitmq
    container_name: rabbitmq
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    networks:
      - kitchen-connection
    environment:
      - RABBITMQ_DEFAULT_USER=kitchenconnection
      - RABBITMQ_DEFAULT_PASS=kitchenconnection
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 2s
      timeout: 3s
      retries: 30
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.0
    container_name: elasticsearch
    restart: always
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - kitchen-connection
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.4.0
    restart: always
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    networks:
      - kitchen-connection

volumes:
  postgres:
  pgadmin:
  redis:
  rabbitmq:
  elasticsearch-data:

networks:
  kitchen-connection:
    driver: bridge